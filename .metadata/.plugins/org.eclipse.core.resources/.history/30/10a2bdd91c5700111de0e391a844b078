package com.applicake.beanstalkclient.activities;

import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v4.app.FragmentTransaction;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Button;
import android.widget.ExpandableListView;
import android.widget.FrameLayout;
import android.widget.ListView;
import android.widget.TextView;

import com.applicake.beanstalkclient.Constants;
import com.applicake.beanstalkclient.R;
import com.applicake.beanstalkclient.Release;
import com.applicake.beanstalkclient.Repository;
import com.applicake.beanstalkclient.ServerEnvironment;
import com.applicake.beanstalkclient.Strings;
import com.applicake.beanstalkclient.adapters.ReleasesAdapter;
import com.applicake.beanstalkclient.adapters.ServersAdapter;
import com.applicake.beanstalkclient.tasks.BeanstalkAsyncTask;
import com.applicake.beanstalkclient.tasks.ResponseHandler;
import com.applicake.beanstalkclient.utils.GUI;
import com.applicake.beanstalkclient.utils.HttpRetriever;
import com.applicake.beanstalkclient.utils.HttpRetriever.HttpConnectionErrorException;
import com.applicake.beanstalkclient.utils.HttpRetriever.UnsuccessfulServerResponseException;
import com.applicake.beanstalkclient.utils.SimpleRetryDialogBuilder;
import com.applicake.beanstalkclient.utils.XmlParser;
import com.applicake.beanstalkclient.utils.XmlParser.XMLParserException;

public class NewRepositoryDeploymentsActivity extends BeanstalkActivity implements {
    
  boolean serverListLoaded = false;
  boolean releaseListLoaded = false;

  private boolean activityStartedForSpecificRepository;
    
  private SpecifiedRepoReleasesListFragment releasesFragment;
  private SpecificRepoServerEnviromentsFragment serversFragment;

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);

    setContentView(R.layout.new_repository_deployments_layout);
        
    activityStartedForSpecificRepository = getIntent().getBooleanExtra(Constants.OVERALL_REPOS, false);
    
    setupReleasesFragment();
  }
  
  private void setupReleasesFragment() {
    FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
    if(releasesFragment == null) {
      if(activityStartedForSpecificRepository) {
        releasesFragment = new SpecifiedRepoReleasesListFragment();
      } else {
        releasesFragment = new OverallRepoReleaseFragment();
      }
    }
    transaction.replace(R.id.fragment_container, releasesFragment);
    transaction.commit();
  }
  
  private void setupServersFragment() {
    FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
    if(serversFragment == null) {
      if(activityStartedForSpecificRepository) {
        serversFragment = new SpecificRepoServerEnviromentsFragment();
      } else {
        serversFragment = new OverallRepoServerEnviromentsListFragment();
      }
    }
    transaction.replace(R.id.fragment_container, releasesFragment);
    transaction.commit();
  }

  @Override
  public void onBackPressed() {
    finish();
  }

  @Override
  public void onClick(View view) {
    int id = view.getId();
    switch (id) {
    case R.id.releases_button:
      setupReleasesFragment();
      break;

    case R.id.servers_button:
      setupServersFragment();
      break;
    }
  }

}
